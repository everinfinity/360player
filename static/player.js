let isPlaying=!1,mode="HD";const playButton=document.getElementById("play_button"),progress=document.getElementById("status_progress"),modeButton=document.getElementById("mode_button"),modeTypo=document.getElementById("mode_typo"),scene=new THREE.Scene,width=document.getElementById("stage").clientWidth,height=document.getElementById("stage").clientHeight,camera=new THREE.PerspectiveCamera(75,width/height,1,100),renderer=new THREE.WebGLRenderer;renderer.setSize(width,height),document.getElementById("stage").appendChild(renderer.domElement);const geometry=new THREE.SphereGeometry(15,32,16),videoElement=document.createElement("video");videoElement.src="/test.mp4",videoElement.loop=!0,videoElement.playsInline=!0,videoElement.crossOrigin="anonymous";const texture=new THREE.VideoTexture(videoElement),material=new THREE.MeshBasicMaterial({map:texture});material.side=THREE.BackSide;const mesh=new THREE.Mesh(geometry,material);scene.add(mesh),renderer.setAnimationLoop(()=>renderer.render(scene,camera));const clamp=(e,t,n)=>Math.max(t,Math.min(e,n));renderer.domElement.addEventListener("wheel",e=>{camera.fov=clamp(camera.fov+e.deltaY/10,10,120),camera.updateProjectionMatrix()});let mouseDown=!1;renderer.domElement.addEventListener("mousedown",e=>{0===e.button&&(mouseDown=!0)}),window.addEventListener("mouseup",e=>{0===e.button&&(mouseDown=!1)}),window.addEventListener("mousemove",e=>{if(!mouseDown)return;const{movementX:t,movementY:n}=e,o=n/100,d=t/100;camera.rotateX(o),camera.rotateY(d)}),playButton.querySelector("img").addEventListener("click",()=>{isPlaying?(isPlaying=!1,videoElement.pause(),playButton.style.opacity=0,playButton.querySelector("img").src="https://www.freeiconspng.com/uploads/video-play-icon-7.png"):(isPlaying=!0,videoElement.play(),playButton.style.opacity=0,playButton.querySelector("img").src="https://www.freeiconspng.com/uploads/blue-pause-icon-0.png")}),playButton.addEventListener("mouseover",()=>{playButton.style.opacity=1}),playButton.addEventListener("mouseleave",()=>{playButton.style.opacity=0}),videoElement.addEventListener("timeupdate",e=>{const t=videoElement.currentTime/videoElement.duration*1e4;progress.value=t}),progress.addEventListener("change",e=>{const t=e.target.value*videoElement.duration/1e4;videoElement.currentTime=t}),modeButton.addEventListener("click",()=>"HD"===mode?(mode="4K",modeTypo.innerText="4K Video",videoElement.pause(),videoElement.src="/4k.mp4",void videoElement.play()):"4K"===mode?(mode="HD",modeTypo.innerText="HD Video",videoElement.pause(),videoElement.src="test.mp4",void videoElement.play()):void 0);